#!/bin/bash

# GNOME Restore Script
# Obnov√≠ GNOME nastaven√≠ ze z√°lohy

set -e  # Zastavit p≈ôi chybƒõ

# Barevn√© v√Ωstupy
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funkce pro barevn√© v√Ωpisy
print_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
print_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
print_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
print_error() { echo -e "${RED}‚ùå $1${NC}"; }

# Z√≠sk√°n√≠ aktu√°ln√≠ho adres√°≈ôe scriptu
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
BACKUP_DIR="$SCRIPT_DIR/backups"

# Funkce pro zobrazen√≠ n√°povƒõdy
show_help() {
    echo "üîÑ GNOME Restore Script"
    echo "Obnov√≠ GNOME nastaven√≠ ze z√°lohy"
    echo
    echo "Pou≈æit√≠: $0 [mo≈ænosti] [z√°loha]"
    echo
    echo "Mo≈ænosti:"
    echo "  -l, --list              Zobraz√≠ dostupn√© z√°lohy"
    echo "  -h, --help              Zobraz√≠ tuto n√°povƒõdu"
    echo "  -f, --force             Neptat se na potvrzen√≠"
    echo "  -d, --dry-run           Pouze zobraz√≠ co by se dƒõlalo"
    echo
    echo "Argumenty:"
    echo "  z√°loha                  N√°zev z√°lohy (nap≈ô. backup_20240630_143022)"
    echo "                          nebo 'latest' pro nejnovƒõj≈°√≠ z√°lohu"
    echo
    echo "P≈ô√≠klady:"
    echo "  $0 -l                   Zobraz√≠ seznam dostupn√Ωch z√°loh"
    echo "  $0 latest               Obnov√≠ nejnovƒõj≈°√≠ z√°lohu"
    echo "  $0 backup_20240630_143022  Obnov√≠ specifickou z√°lohu"
    echo "  $0 -d latest            Dry-run - uk√°≈æe co by se dƒõlalo"
    echo "  $0 -f latest            Obnov√≠ bez pt√°n√≠ na potvrzen√≠"
    echo
    echo "‚ö†Ô∏è  POZOR: Restore p≈ôep√≠≈°e va≈°e souƒçasn√© GNOME nastaven√≠!"
    echo "üìã Pro zobrazen√≠ z√°loh pou≈æijte: $0 -l"
}

# Funkce pro v√Ωpis dostupn√Ωch z√°loh
list_backups() {
    print_info "üìÇ Dostupn√© z√°lohy v $BACKUP_DIR:"
    echo
    if [ ! -d "$BACKUP_DIR" ]; then
        print_warning "Adres√°≈ô se z√°lohami neexistuje: $BACKUP_DIR"
        return 1
    fi
    
    if [ ! "$(ls -A "$BACKUP_DIR"/backup_* 2>/dev/null)" ]; then
        print_warning "≈Ω√°dn√© z√°lohy nenalezeny"
        return 1
    fi
    
    for backup in "$BACKUP_DIR"/backup_*; do
        if [ -d "$backup" ]; then
            backup_name=$(basename "$backup")
            backup_date=$(echo "$backup_name" | sed 's/backup_//' | sed 's/_/ /')
            backup_size=$(du -sh "$backup" 2>/dev/null | cut -f1 || echo "N/A")
            printf "  %-25s %s (%s)\n" "$backup_name" "$backup_date" "$backup_size"
        fi
    done
    
    echo
    if [ -L "$BACKUP_DIR/latest" ]; then
        latest_target=$(readlink "$BACKUP_DIR/latest")
        print_info "üîó Nejnovƒõj≈°√≠ z√°loha: $latest_target"
    fi
}

# Funkce pro vytvo≈ôen√≠ z√°lohy p≈ôed obnoven√≠m
create_pre_restore_backup() {
    print_info "üíæ Vytv√°≈ô√≠m z√°lohu p≈ôed obnoven√≠m..."
    PRE_RESTORE_BACKUP="$BACKUP_DIR/pre-restore-backup_$(date +%Y%m%d_%H%M%S)"
    
    mkdir -p "$PRE_RESTORE_BACKUP/config"
    mkdir -p "$PRE_RESTORE_BACKUP/dconf"
    
    # Rychl√° z√°loha souƒçasn√©ho stavu
    dconf dump / > "$PRE_RESTORE_BACKUP/dconf/current-settings.ini" 2>/dev/null || true
    [ -d ~/.config/dconf ] && cp -r ~/.config/dconf "$PRE_RESTORE_BACKUP/config/" 2>/dev/null || true
    [ -d ~/.local/share/gnome-shell/extensions ] && cp -r ~/.local/share/gnome-shell/extensions "$PRE_RESTORE_BACKUP/" 2>/dev/null || true
    
    print_success "Z√°loha p≈ôed obnoven√≠m vytvo≈ôena: $(basename "$PRE_RESTORE_BACKUP")"
}

# Funkce pro obnoven√≠ nastaven√≠
restore_settings() {
    local restore_path="$1"
    local dry_run="$2"
    
    if [ ! -d "$restore_path" ]; then
        print_error "Z√°loha neexistuje: $restore_path"
        exit 1
    fi
    
    print_info "üîÑ Obnovuji GNOME nastaven√≠ ze z√°lohy: $(basename "$restore_path")"
    
    if [ "$dry_run" = "true" ]; then
        print_warning "üß™ DRY-RUN re≈æim - pouze zobrazuji co by se dƒõlalo"
    fi
    
    # Kontrola obsahu z√°lohy
    if [ ! -f "$restore_path/backup-info.txt" ]; then
        print_warning "Z√°loha neobsahuje info soubor - mo≈æn√° je ne√∫pln√°"
    else
        print_info "üìã Informace o z√°loze:"
        cat "$restore_path/backup-info.txt" | sed 's/^/  /'
        echo
    fi
    
    # Obnoven√≠ dconf nastaven√≠
    if [ -f "$restore_path/dconf/all-settings.ini" ]; then
        print_info "üìä Obnovuji dconf nastaven√≠..."
        if [ "$dry_run" != "true" ]; then
            dconf load / < "$restore_path/dconf/all-settings.ini"
            print_success "Dconf nastaven√≠ obnovena"
        else
            print_info "  Obnovil bych: $restore_path/dconf/all-settings.ini"
        fi
    else
        print_warning "Dconf z√°loha nenalezena"
    fi
    
    # Obnoven√≠ konfiguraƒçn√≠ch soubor≈Ø
    if [ -d "$restore_path/config" ]; then
        print_info "üìÅ Obnovuji konfiguraƒçn√≠ soubory..."
        for config_item in "$restore_path/config"/*; do
            if [ -e "$config_item" ]; then
                item_name=$(basename "$config_item")
                target_path="$HOME/.config/$item_name"
                
                if [ "$dry_run" != "true" ]; then
                    # Vytvo≈ôit z√°lohu existuj√≠c√≠ho nastaven√≠ v /tmp
                    if [ -e "$target_path" ]; then
                        mv "$target_path" "/tmp/$(basename "$target_path").backup-$(date +%s)" 2>/dev/null || true
                    fi
                    cp -r "$config_item" "$target_path"
                    print_success "Obnoveno: $item_name"
                else
                    print_info "  Obnovil bych: $item_name -> $target_path"
                fi
            fi
        done
    fi
    
    # Obnoven√≠ extensions
    if [ -d "$restore_path/local/extensions" ]; then
        print_info "üîå Obnovuji GNOME Shell extensions..."
        if [ "$dry_run" != "true" ]; then
            mkdir -p "$HOME/.local/share/gnome-shell"
            # Z√°loha souƒçasn√Ωch extensions do /tmp
            if [ -d "$HOME/.local/share/gnome-shell/extensions" ]; then
                mv "$HOME/.local/share/gnome-shell/extensions" "/tmp/extensions.backup-$(date +%s)" 2>/dev/null || true
            fi
            cp -r "$restore_path/local/extensions" "$HOME/.local/share/gnome-shell/extensions"
            print_success "Extensions obnoveny"
        else
            print_info "  Obnovil bych u≈æivatelsk√© extensions"
        fi
    fi
    
    # Obnoven√≠ seznamu aktivn√≠ch extensions
    if [ -f "$restore_path/enabled-extensions.txt" ]; then
        print_info "‚úÖ Obnovuji seznam aktivn√≠ch extensions..."
        if [ "$dry_run" != "true" ]; then
            enabled_extensions=$(cat "$restore_path/enabled-extensions.txt")
            gsettings set org.gnome.shell enabled-extensions "$enabled_extensions"
            print_success "Seznam aktivn√≠ch extensions obnoven"
        else
            print_info "  Obnovil bych: $(cat "$restore_path/enabled-extensions.txt")"
        fi
    fi
    
    if [ "$dry_run" != "true" ]; then
        echo
        print_success "üéâ Obnoven√≠ dokonƒçeno!"
        print_warning "‚ö†Ô∏è  Doporuƒçuje se restartovat GNOME Shell (Alt+F2, pak napi≈°te 'r')"
        print_info "üí° Nebo se odhlaste a znovu p≈ôihlaste"
    else
        echo
        print_info "üß™ DRY-RUN dokonƒçen - ≈æ√°dn√© zmƒõny nebyly provedeny"
    fi
}

# Parsov√°n√≠ argument≈Ø
FORCE=false
DRY_RUN=false
BACKUP_NAME=""

while [[ $# -gt 0 ]]; do
    case $1 in
        -l|--list)
            list_backups
            exit 0
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        -f|--force)
            FORCE=true
            shift
            ;;
        -d|--dry-run)
            DRY_RUN=true
            shift
            ;;
        -*)
            print_error "Nezn√°m√° mo≈ænost: $1"
            show_help
            exit 1
            ;;
        *)
            BACKUP_NAME="$1"
            shift
            ;;
    esac
done

# Urƒçen√≠ cesty k z√°loze
if [ -z "$BACKUP_NAME" ]; then
    # Bez parametr≈Ø zobrazit help
    show_help
    exit 0
else
    if [[ "$BACKUP_NAME" == "latest" ]]; then
        if [ -L "$BACKUP_DIR/latest" ]; then
            RESTORE_PATH="$BACKUP_DIR/$(readlink "$BACKUP_DIR/latest")"
            BACKUP_NAME="latest ($(readlink "$BACKUP_DIR/latest"))"
        else
            print_error "'latest' symlink neexistuje"
            print_info "Pou≈æijte -l pro zobrazen√≠ dostupn√Ωch z√°loh"
            exit 1
        fi
    elif [[ "$BACKUP_NAME" == backup_* ]]; then
        RESTORE_PATH="$BACKUP_DIR/$BACKUP_NAME"
    else
        RESTORE_PATH="$BACKUP_DIR/backup_$BACKUP_NAME"
    fi
fi

# Kontrola existence z√°lohy
if [ ! -d "$RESTORE_PATH" ]; then
    print_error "Z√°loha neexistuje: $RESTORE_PATH"
    list_backups
    exit 1
fi

# Potvrzen√≠ (pokud nen√≠ force mode)
if [ "$FORCE" != "true" ] && [ "$DRY_RUN" != "true" ]; then
    echo
    print_warning "üö® POZOR: Tato operace p≈ôep√≠≈°e va≈°e souƒçasn√© GNOME nastaven√≠!"
    print_info "Z√°loha k obnoven√≠: $BACKUP_NAME"
    print_info "P≈ôed obnoven√≠m bude vytvo≈ôena z√°loha souƒçasn√©ho stavu."
    echo
    read -p "Pokraƒçovat? (ano/ne): " -r
    if [[ ! $REPLY =~ ^[Aa]no$ ]]; then
        print_info "Operace zru≈°ena"
        exit 0
    fi
fi

# Vytvo≈ôen√≠ z√°lohy p≈ôed obnoven√≠m (pokud nen√≠ dry-run)
if [ "$DRY_RUN" != "true" ]; then
    create_pre_restore_backup
fi

# Proveden√≠ obnoven√≠
restore_settings "$RESTORE_PATH" "$DRY_RUN"
